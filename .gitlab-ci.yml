image: cr.agilicus.com/corp-tools/docker-compose

stages:
  - build
  - scan
  - test

before_script:
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY

variables:
  DOCKER_DRIVER: overlay2
  PORT: 2375
  DOCKER_HOST: tcp://localhost:2375
  TAIGA_CONTAINER_REGISTRY: $CI_REGISTRY/$CI_PROJECT_PATH/

services:
  - name: docker:dind

build:
  stage: build
  script:
    - echo Start build
    - touch environment
    - echo Build with TAIGA_CONTAINER_REGISTRY=$TAIGA_CONTAINER_REGISTRY
    - docker-compose build
    - docker tag $CI_REGISTRY/$CI_PROJECT_PATH/taiga_backend:latest $CI_REGISTRY/$CI_PROJECT_PATH/taiga_backend:$CI_BUILD_REF
    - docker tag $CI_REGISTRY/$CI_PROJECT_PATH/taiga_events:latest $CI_REGISTRY/$CI_PROJECT_PATH/taiga_events:$CI_BUILD_REF
    - docker tag $CI_REGISTRY/$CI_PROJECT_PATH/taiga_frontend:latest $CI_REGISTRY/$CI_PROJECT_PATH/taiga_frontend:$CI_BUILD_REF
    - docker tag $CI_REGISTRY/$CI_PROJECT_PATH/taiga_celeryworker:latest $CI_REGISTRY/$CI_PROJECT_PATH/taiga_celeryworker:$CI_BUILD_REF
    - docker images
    - docker-compose push
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH/taiga_backend:$CI_BUILD_REF
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH/taiga_events:$CI_BUILD_REF
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH/taiga_frontend:$CI_BUILD_REF
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH/taiga_celeryworker:$CI_BUILD_REF

scan:
  stage: scan
  artifacts:
    name: "$CI_PROJECT_PATH-$CI_COMMIT_REF_NAME"
    paths:
      - reports/
  script:
    - echo Analyse $CI_REGISTRY/$CI_PROJECT_PATH/taiga_backend:$CI_BUILD_REF for vulnerability
    - clairctl analyze --log-level debug $CI_REGISTRY/$CI_PROJECT_PATH/taiga_backend:$CI_BUILD_REF || true
    - echo Analyse $CI_REGISTRY/$CI_PROJECT_PATH/taiga_frontend:$CI_BUILD_REF for vulnerability
    - clairctl analyze --log-level debug $CI_REGISTRY/$CI_PROJECT_PATH/taiga_frontend:$CI_BUILD_REF || true
    - echo Analyse $CI_REGISTRY/$CI_PROJECT_PATH/taiga_events:$CI_BUILD_REF for vulnerability
    - clairctl analyze --log-level debug $CI_REGISTRY/$CI_PROJECT_PATH/taiga_events:$CI_BUILD_REF || true
    - echo Analyse $CI_REGISTRY/$CI_PROJECT_PATH/taiga_celeryworker:$CI_BUILD_REF for vulnerability
    - clairctl analyze --log-level debug $CI_REGISTRY/$CI_PROJECT_PATH/taiga_celeryworker:$CI_BUILD_REF || true
    - echo Generate JSON report
    - clairctl report -f json $CI_REGISTRY/$CI_PROJECT_PATH/taiga_backend:$CI_BUILD_REF || true
    - clairctl report -f json $CI_REGISTRY/$CI_PROJECT_PATH/taiga_frontend:$CI_BUILD_REF || true
    - clairctl report -f json $CI_REGISTRY/$CI_PROJECT_PATH/taiga_events:$CI_BUILD_REF || true
    - clairctl report -f json $CI_REGISTRY/$CI_PROJECT_PATH/taiga_celeryworker:$CI_BUILD_REF || true
    - echo Generate HTML report
    - clairctl report -f html $CI_REGISTRY/$CI_PROJECT_PATH/taiga_backend:$CI_BUILD_REF || true
    - clairctl report -f html $CI_REGISTRY/$CI_PROJECT_PATH/taiga_frontend:$CI_BUILD_REF || true
    - clairctl report -f html $CI_REGISTRY/$CI_PROJECT_PATH/taiga_events:$CI_BUILD_REF || true
    - clairctl report -f html $CI_REGISTRY/$CI_PROJECT_PATH/taiga_celeryworker:$CI_BUILD_REF || true

test:
  stage: test
  script:
    - echo Start unit-test
